SELECT *
--FROM [PortfolioProject].dbo.CovidVaccinations
--order by 3,4


--shows the likelyhood of dying from Covid in the US as of 4/30/21
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM [PortfolioProject].dbo.CovidDeaths
Where location like '%states%'

order by 1,2

--
SELECT Location, date, total_cases, population, (total_cases/population)*100 as cases_Per_Capita
FROM [PortfolioProject].dbo.CovidDeaths
Where location like '%states%'
order by 1,2


--Looking at Countries with Highest Infections per Capita
Select Location, MAX(total_cases) as HighestInfectionCount, population, MAX((total_cases/population))*100 as HighestCasesPerCapita
FROM [PortfolioProject].dbo.CovidDeaths
--Where location like '%states%'
GROUP BY Location, Population
ORDER BY HighestCasesPerCapita DESC



--Showing countries with highest death count per capita

Select Location, MAX(cast(total_deaths as int)) as TotalDeathCount, population, MAX((total_deaths/population))*100 as MostdeathsPerCapita
FROM [PortfolioProject].dbo.CovidDeaths
--Where location like '%states%'
WHERE continent is not null
GROUP BY Location, Population
ORDER BY TotalDeathCount desc--MostdeathsPerCapita DESC


--Break things down by continent

SELECT continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP by continent
order by TotalDeathCount desc

--showing continents with highest death count per population


-- Global numbers

SELECT SUM(new_cases) as Total_Cases, SUM(cast(new_deaths as int)) as Total_Deaths, SUM(cast(new_deaths as int))/SUM (new_cases)*100 as DeathPercentage
FROM [PortfolioProject].dbo.CovidDeaths
--Where location like '%states%'
WHERE continent is not null
--GROUP by date
order by 1,2


--looking at total population vs vaccinations
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as int)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingVaccinations
--,(RollingVaccinations/population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
Order by 2,3


--USE CTE

With PopvsVac (continent, location, date, population, new_vaccinations, RollingVaccinations)
as
(SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as int)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingVaccinations
--,(RollingVaccinations/population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
--Order by 2,3
)

SELECT *, (RollingVaccinations/population)*100 as RollingVaccinationsPerCapita
FROM PopvsVac

-- Temp Table
DROP TABLE if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_Vaccinations numeric,
RollingVaccinations numeric)

Insert into #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as int)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingVaccinations
--,(RollingVaccinations/population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
--Order by 2,3

SELECT *, (RollingVaccinations/population)*100 as RollingVaccinationsPerCapita
FROM #PercentPopulationVaccinated

-- creating view for later visualizations

Create View PercentPopulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as int)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingVaccinations
--,(RollingVaccinations/population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
--Order by 2,3

Create View RollingVaccinations as

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(cast(vac.new_vaccinations as int)) OVER (Partition by dea.location order by dea.location, dea.date) as RollingVaccinations
--,(RollingVaccinations/population)*100
FROM PortfolioProject..CovidDeaths dea
JOIN PortfolioProject..CovidVaccinations vac
	ON dea.location = vac.location
	and dea.date = vac.date
WHERE dea.continent is not null
--Order by 2,3

